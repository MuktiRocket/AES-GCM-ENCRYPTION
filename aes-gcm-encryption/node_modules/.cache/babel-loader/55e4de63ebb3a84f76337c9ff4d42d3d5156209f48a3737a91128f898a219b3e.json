{"ast":null,"code":"export async function decrypt({\n  data\n}) {\n  const KEY = hexStringToArrayBuffer(data.KEY);\n  const IV = hexStringToArrayBuffer(data.IV);\n  const encrypted = hexStringToArrayBuffer(data.encrypted + data.TAG);\n  try {\n    // Import the key\n    const importedKey = await window.crypto.subtle.importKey('raw', KEY, 'AES-GCM', true, ['decrypt']);\n\n    // Decrypt the data\n    const decodedBuffer = await window.crypto.subtle.decrypt({\n      name: 'AES-GCM',\n      iv: IV\n    }, importedKey, encrypted);\n\n    // Decode the plaintext\n    const plaintext = new TextDecoder('utf8').decode(decodedBuffer);\n    return plaintext;\n  } catch (error) {\n    console.error('Decryption failed:', error);\n    throw error; // Rethrow error for handling by caller\n  }\n}\nexport function hexStringToArrayBuffer(hexString) {\n  hexString = hexString.replace(/^0x/, '');\n  if (hexString.length % 2 != 0) {\n    console.log('WARNING: expecting an even number of characters in the hexString');\n  }\n  var bad = hexString.match(/[G-Z\\s]/i);\n  if (bad) {\n    console.log('WARNING: found non-hex characters', bad);\n  }\n  var pairs = hexString.match(/[\\dA-F]{2}/gi);\n  var integers = pairs.map(function (s) {\n    return parseInt(s, 16);\n  });\n  var array = new Uint8Array(integers);\n  return array.buffer;\n}","map":{"version":3,"names":["decrypt","data","KEY","hexStringToArrayBuffer","IV","encrypted","TAG","importedKey","window","crypto","subtle","importKey","decodedBuffer","name","iv","plaintext","TextDecoder","decode","error","console","hexString","replace","length","log","bad","match","pairs","integers","map","s","parseInt","array","Uint8Array","buffer"],"sources":["/home/web33/Desktop/Webguru/my projects/aes-gcm-architechture/aes-gcm-encryption/src/helper/commonHelper.js"],"sourcesContent":["export async function decrypt({ data }) {\n  const KEY = hexStringToArrayBuffer(data.KEY);\n  const IV = hexStringToArrayBuffer(data.IV);\n  const encrypted = hexStringToArrayBuffer(data.encrypted + data.TAG);\n\n  try {\n      // Import the key\n      const importedKey = await window.crypto.subtle.importKey(\n          'raw',\n          KEY,\n          'AES-GCM',\n          true,\n          ['decrypt']\n      );\n\n      // Decrypt the data\n      const decodedBuffer = await window.crypto.subtle.decrypt(\n          {\n              name: 'AES-GCM',\n              iv: IV,\n          },\n          importedKey,\n          encrypted\n      );\n\n      // Decode the plaintext\n      const plaintext = new TextDecoder('utf8').decode(decodedBuffer);\n      return plaintext;\n  } catch (error) {\n      console.error('Decryption failed:', error);\n      throw error; // Rethrow error for handling by caller\n  }\n}\n    \nexport function hexStringToArrayBuffer(hexString) {\n    hexString = hexString.replace(/^0x/, '');\n    if (hexString.length % 2 != 0) {\n        console.log('WARNING: expecting an even number of characters in the hexString');\n    }\n    var bad = hexString.match(/[G-Z\\s]/i);\n    if (bad) {\n        console.log('WARNING: found non-hex characters', bad);    \n    }\n    var pairs = hexString.match(/[\\dA-F]{2}/gi);\n    var integers = pairs.map(function(s) {\n        return parseInt(s, 16);\n    });\n    var array = new Uint8Array(integers);\n    return array.buffer;\n} "],"mappings":"AAAA,OAAO,eAAeA,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACtC,MAAMC,GAAG,GAAGC,sBAAsB,CAACF,IAAI,CAACC,GAAG,CAAC;EAC5C,MAAME,EAAE,GAAGD,sBAAsB,CAACF,IAAI,CAACG,EAAE,CAAC;EAC1C,MAAMC,SAAS,GAAGF,sBAAsB,CAACF,IAAI,CAACI,SAAS,GAAGJ,IAAI,CAACK,GAAG,CAAC;EAEnE,IAAI;IACA;IACA,MAAMC,WAAW,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACC,MAAM,CAACC,SAAS,CACpD,KAAK,EACLT,GAAG,EACH,SAAS,EACT,IAAI,EACJ,CAAC,SAAS,CACd,CAAC;;IAED;IACA,MAAMU,aAAa,GAAG,MAAMJ,MAAM,CAACC,MAAM,CAACC,MAAM,CAACV,OAAO,CACpD;MACIa,IAAI,EAAE,SAAS;MACfC,EAAE,EAAEV;IACR,CAAC,EACDG,WAAW,EACXF,SACJ,CAAC;;IAED;IACA,MAAMU,SAAS,GAAG,IAAIC,WAAW,CAAC,MAAM,CAAC,CAACC,MAAM,CAACL,aAAa,CAAC;IAC/D,OAAOG,SAAS;EACpB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK,CAAC,CAAC;EACjB;AACF;AAEA,OAAO,SAASf,sBAAsBA,CAACiB,SAAS,EAAE;EAC9CA,SAAS,GAAGA,SAAS,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EACxC,IAAID,SAAS,CAACE,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;IAC3BH,OAAO,CAACI,GAAG,CAAC,kEAAkE,CAAC;EACnF;EACA,IAAIC,GAAG,GAAGJ,SAAS,CAACK,KAAK,CAAC,UAAU,CAAC;EACrC,IAAID,GAAG,EAAE;IACLL,OAAO,CAACI,GAAG,CAAC,mCAAmC,EAAEC,GAAG,CAAC;EACzD;EACA,IAAIE,KAAK,GAAGN,SAAS,CAACK,KAAK,CAAC,cAAc,CAAC;EAC3C,IAAIE,QAAQ,GAAGD,KAAK,CAACE,GAAG,CAAC,UAASC,CAAC,EAAE;IACjC,OAAOC,QAAQ,CAACD,CAAC,EAAE,EAAE,CAAC;EAC1B,CAAC,CAAC;EACF,IAAIE,KAAK,GAAG,IAAIC,UAAU,CAACL,QAAQ,CAAC;EACpC,OAAOI,KAAK,CAACE,MAAM;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}