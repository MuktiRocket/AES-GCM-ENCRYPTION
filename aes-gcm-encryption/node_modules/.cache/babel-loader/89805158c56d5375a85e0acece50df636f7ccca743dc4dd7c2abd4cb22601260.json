{"ast":null,"code":"const KEY = \"a7db1bd03dc04379d10ebdc136f15c3efebaeb214a253c5af7328bd93c71d23a\";\nexport async function decrypt({\n  data\n}) {\n  const IV = hexStringToArrayBuffer(data.IV);\n  const encrypted = hexStringToArrayBuffer(data.encrypted + data.TAG);\n  try {\n    // Import the key\n    const importedKey = await window.crypto.subtle.importKey(\"raw\", KEY, \"AES-GCM\", true, [\"decrypt\"]);\n\n    // Decrypt the data\n    const decodedBuffer = await window.crypto.subtle.decrypt({\n      name: \"AES-GCM\",\n      iv: IV\n    }, importedKey, encrypted);\n\n    // Decode the plaintext\n    const plaintext = new TextDecoder(\"utf8\").decode(decodedBuffer);\n    return plaintext;\n  } catch (error) {\n    console.error(\"Decryption failed:\", error);\n    throw error; // Rethrow error for handling by caller\n  }\n}\nexport function hexStringToArrayBuffer(hexString) {\n  hexString = hexString.replace(/^0x/, \"\");\n  if (hexString.length % 2 != 0) {\n    console.log(\"WARNING: expecting an even number of characters in the hexString\");\n  }\n  var bad = hexString.match(/[G-Z\\s]/i);\n  if (bad) {\n    console.log(\"WARNING: found non-hex characters\", bad);\n  }\n  var pairs = hexString.match(/[\\dA-F]{2}/gi);\n  var integers = pairs.map(function (s) {\n    return parseInt(s, 16);\n  });\n  var array = new Uint8Array(integers);\n  return array.buffer;\n}","map":{"version":3,"names":["KEY","decrypt","data","IV","hexStringToArrayBuffer","encrypted","TAG","importedKey","window","crypto","subtle","importKey","decodedBuffer","name","iv","plaintext","TextDecoder","decode","error","console","hexString","replace","length","log","bad","match","pairs","integers","map","s","parseInt","array","Uint8Array","buffer"],"sources":["/home/web33/Desktop/Webguru/my projects/aes-gcm-architechture/aes-gcm-encryption/src/helper/commonHelper.js"],"sourcesContent":["const KEY = \"a7db1bd03dc04379d10ebdc136f15c3efebaeb214a253c5af7328bd93c71d23a\";\n\nexport async function decrypt({ data }) {\n  const IV = hexStringToArrayBuffer(data.IV);\n  const encrypted = hexStringToArrayBuffer(data.encrypted + data.TAG);\n\n  try {\n    // Import the key\n    const importedKey = await window.crypto.subtle.importKey(\n      \"raw\",\n      KEY,\n      \"AES-GCM\",\n      true,\n      [\"decrypt\"]\n    );\n\n    // Decrypt the data\n    const decodedBuffer = await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: IV,\n      },\n      importedKey,\n      encrypted\n    );\n\n    // Decode the plaintext\n    const plaintext = new TextDecoder(\"utf8\").decode(decodedBuffer);\n    return plaintext;\n  } catch (error) {\n    console.error(\"Decryption failed:\", error);\n    throw error; // Rethrow error for handling by caller\n  }\n}\n\nexport function hexStringToArrayBuffer(hexString) {\n  hexString = hexString.replace(/^0x/, \"\");\n  if (hexString.length % 2 != 0) {\n    console.log(\n      \"WARNING: expecting an even number of characters in the hexString\"\n    );\n  }\n  var bad = hexString.match(/[G-Z\\s]/i);\n  if (bad) {\n    console.log(\"WARNING: found non-hex characters\", bad);\n  }\n  var pairs = hexString.match(/[\\dA-F]{2}/gi);\n  var integers = pairs.map(function (s) {\n    return parseInt(s, 16);\n  });\n  var array = new Uint8Array(integers);\n  return array.buffer;\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG,kEAAkE;AAE9E,OAAO,eAAeC,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACtC,MAAMC,EAAE,GAAGC,sBAAsB,CAACF,IAAI,CAACC,EAAE,CAAC;EAC1C,MAAME,SAAS,GAAGD,sBAAsB,CAACF,IAAI,CAACG,SAAS,GAAGH,IAAI,CAACI,GAAG,CAAC;EAEnE,IAAI;IACF;IACA,MAAMC,WAAW,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACC,MAAM,CAACC,SAAS,CACtD,KAAK,EACLX,GAAG,EACH,SAAS,EACT,IAAI,EACJ,CAAC,SAAS,CACZ,CAAC;;IAED;IACA,MAAMY,aAAa,GAAG,MAAMJ,MAAM,CAACC,MAAM,CAACC,MAAM,CAACT,OAAO,CACtD;MACEY,IAAI,EAAE,SAAS;MACfC,EAAE,EAAEX;IACN,CAAC,EACDI,WAAW,EACXF,SACF,CAAC;;IAED;IACA,MAAMU,SAAS,GAAG,IAAIC,WAAW,CAAC,MAAM,CAAC,CAACC,MAAM,CAACL,aAAa,CAAC;IAC/D,OAAOG,SAAS;EAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF;AAEA,OAAO,SAASd,sBAAsBA,CAACgB,SAAS,EAAE;EAChDA,SAAS,GAAGA,SAAS,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EACxC,IAAID,SAAS,CAACE,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;IAC7BH,OAAO,CAACI,GAAG,CACT,kEACF,CAAC;EACH;EACA,IAAIC,GAAG,GAAGJ,SAAS,CAACK,KAAK,CAAC,UAAU,CAAC;EACrC,IAAID,GAAG,EAAE;IACPL,OAAO,CAACI,GAAG,CAAC,mCAAmC,EAAEC,GAAG,CAAC;EACvD;EACA,IAAIE,KAAK,GAAGN,SAAS,CAACK,KAAK,CAAC,cAAc,CAAC;EAC3C,IAAIE,QAAQ,GAAGD,KAAK,CAACE,GAAG,CAAC,UAAUC,CAAC,EAAE;IACpC,OAAOC,QAAQ,CAACD,CAAC,EAAE,EAAE,CAAC;EACxB,CAAC,CAAC;EACF,IAAIE,KAAK,GAAG,IAAIC,UAAU,CAACL,QAAQ,CAAC;EACpC,OAAOI,KAAK,CAACE,MAAM;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}