{"ast":null,"code":"export function decrypt({\n  data\n}) {\n  console.log(data);\n  console.log(data.KEY, data.IV, data.TAG, data.encrypted);\n  let KEY = hexStringToArrayBuffer(data.KEY);\n  let IV = hexStringToArrayBuffer(data.IV);\n  let encrypted = hexStringToArrayBuffer(data.encrypted + data.TAG);\n  window.crypto.subtle.importKey('raw', KEY, 'AES-GCM', true, ['decrypt']).then(importedKey => {\n    console.log('importedKey: ', importedKey);\n    window.crypto.subtle.decrypt({\n      name: \"AES-GCM\",\n      iv: IV\n    }, importedKey, encrypted).then(decodedBuffer => {\n      let plaintext = new TextDecoder('utf8').decode(decodedBuffer);\n      console.log('plainText: ', plaintext);\n    });\n  });\n}\nexport function hexStringToArrayBuffer(hexString) {\n  hexString = hexString.replace(/^0x/, '');\n  if (hexString.length % 2 != 0) {\n    console.log('WARNING: expecting an even number of characters in the hexString');\n  }\n  var bad = hexString.match(/[G-Z\\s]/i);\n  if (bad) {\n    console.log('WARNING: found non-hex characters', bad);\n  }\n  var pairs = hexString.match(/[\\dA-F]{2}/gi);\n  var integers = pairs.map(function (s) {\n    return parseInt(s, 16);\n  });\n  var array = new Uint8Array(integers);\n  return array.buffer;\n}","map":{"version":3,"names":["decrypt","data","console","log","KEY","IV","TAG","encrypted","hexStringToArrayBuffer","window","crypto","subtle","importKey","then","importedKey","name","iv","decodedBuffer","plaintext","TextDecoder","decode","hexString","replace","length","bad","match","pairs","integers","map","s","parseInt","array","Uint8Array","buffer"],"sources":["/home/web33/Desktop/Webguru/my projects/aes-gcm-architechture/aes-gcm-encryption/src/helper/commonHelper.js"],"sourcesContent":["export function decrypt({data}) {\n    console.log(data);\n    console.log(data.KEY, data.IV, data.TAG, data.encrypted);\n    let KEY = hexStringToArrayBuffer(data.KEY);\n    let IV = hexStringToArrayBuffer(data.IV);\n    let encrypted = hexStringToArrayBuffer(data.encrypted + data.TAG);\n  \n    window.crypto.subtle.importKey('raw', KEY, 'AES-GCM', true, ['decrypt']).then((importedKey)=>{\n      console.log('importedKey: ', importedKey);\n      window.crypto.subtle.decrypt(\n        {\n          name: \"AES-GCM\",\n          iv: IV,\n        },\n        importedKey,\n        encrypted\n      ).then((decodedBuffer)=>{\n        let plaintext = new TextDecoder('utf8').decode(decodedBuffer);\n        console.log('plainText: ', plaintext);\n      })\n   })\n}\n    \nexport function hexStringToArrayBuffer(hexString) {\n    hexString = hexString.replace(/^0x/, '');\n    if (hexString.length % 2 != 0) {\n        console.log('WARNING: expecting an even number of characters in the hexString');\n    }\n    var bad = hexString.match(/[G-Z\\s]/i);\n    if (bad) {\n        console.log('WARNING: found non-hex characters', bad);    \n    }\n    var pairs = hexString.match(/[\\dA-F]{2}/gi);\n    var integers = pairs.map(function(s) {\n        return parseInt(s, 16);\n    });\n    var array = new Uint8Array(integers);\n    return array.buffer;\n} "],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAAC;EAACC;AAAI,CAAC,EAAE;EAC5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,GAAG,EAAEH,IAAI,CAACI,EAAE,EAAEJ,IAAI,CAACK,GAAG,EAAEL,IAAI,CAACM,SAAS,CAAC;EACxD,IAAIH,GAAG,GAAGI,sBAAsB,CAACP,IAAI,CAACG,GAAG,CAAC;EAC1C,IAAIC,EAAE,GAAGG,sBAAsB,CAACP,IAAI,CAACI,EAAE,CAAC;EACxC,IAAIE,SAAS,GAAGC,sBAAsB,CAACP,IAAI,CAACM,SAAS,GAAGN,IAAI,CAACK,GAAG,CAAC;EAEjEG,MAAM,CAACC,MAAM,CAACC,MAAM,CAACC,SAAS,CAAC,KAAK,EAAER,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAACS,IAAI,CAAEC,WAAW,IAAG;IAC3FZ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEW,WAAW,CAAC;IACzCL,MAAM,CAACC,MAAM,CAACC,MAAM,CAACX,OAAO,CAC1B;MACEe,IAAI,EAAE,SAAS;MACfC,EAAE,EAAEX;IACN,CAAC,EACDS,WAAW,EACXP,SACF,CAAC,CAACM,IAAI,CAAEI,aAAa,IAAG;MACtB,IAAIC,SAAS,GAAG,IAAIC,WAAW,CAAC,MAAM,CAAC,CAACC,MAAM,CAACH,aAAa,CAAC;MAC7Df,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEe,SAAS,CAAC;IACvC,CAAC,CAAC;EACL,CAAC,CAAC;AACL;AAEA,OAAO,SAASV,sBAAsBA,CAACa,SAAS,EAAE;EAC9CA,SAAS,GAAGA,SAAS,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EACxC,IAAID,SAAS,CAACE,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;IAC3BrB,OAAO,CAACC,GAAG,CAAC,kEAAkE,CAAC;EACnF;EACA,IAAIqB,GAAG,GAAGH,SAAS,CAACI,KAAK,CAAC,UAAU,CAAC;EACrC,IAAID,GAAG,EAAE;IACLtB,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEqB,GAAG,CAAC;EACzD;EACA,IAAIE,KAAK,GAAGL,SAAS,CAACI,KAAK,CAAC,cAAc,CAAC;EAC3C,IAAIE,QAAQ,GAAGD,KAAK,CAACE,GAAG,CAAC,UAASC,CAAC,EAAE;IACjC,OAAOC,QAAQ,CAACD,CAAC,EAAE,EAAE,CAAC;EAC1B,CAAC,CAAC;EACF,IAAIE,KAAK,GAAG,IAAIC,UAAU,CAACL,QAAQ,CAAC;EACpC,OAAOI,KAAK,CAACE,MAAM;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}